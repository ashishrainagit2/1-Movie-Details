{"version":3,"sources":["containers/Movielist/Movielist.module.css","components/Filter/Filter.module.css","components/ModalContent/MovieModalContent.module.css","components/Filter/Filter.js","components/ModalContent/MovieModalContent.js","containers/Movielist/Movielist.js"],"names":["module","exports","Movielist","MovielistWrapper","LoadMore","filterWrapper","closeModal","FilterWrapper","ModalContent","ModalInfo","ModalTitle","infoLine","MoreInfo","MoreInfoBars","filter","props","optionBox","selectedFilters","map","value","i","react_default","a","createElement","key","selected","className","classes","onChange","event","onfilterApply","withRouter","ModalImage","src","poster_path","alt","title","vote_count","vote_average","popularity","adult","release_date","overview","onClick","trailerClick","id","react_router_dom","to","pathname","match","url","exact","this","onInitMovielist","pageNumber","_this","modalContent","movielist","activeMovie","MovieModalContent","trailerClickHandler","trailerId","onClickMovieBox","width","height","Fragment","Filter","onFilterApplyHandler","selectedFilter","aria-hidden","Modal","show","modalStatus","modalClose","length","MovieDisplayCards","list","imagePath","moreInfo","Spinner","Component","connect","state","movieList","page","ModalStatus","totalPages","scrolling","ratingFilter","dispatch","no","actions","onLoadMore"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,UAAA,6BAAAC,iBAAA,oCAAAC,SAAA,4BAAAC,cAAA,iCAAAC,WAAA,oDCAlBN,EAAAC,QAAA,CAAkBM,cAAA,oDCAlBP,EAAAC,QAAA,CAAkBO,aAAA,wCAAAC,UAAA,qCAAAC,WAAA,sCAAAC,SAAA,oCAAAC,SAAA,oCAAAC,aAAA,qNCqBHC,EAnBA,SAACC,GACZ,IAAIC,EAAa,GASjB,OAR4B,MAAzBD,EAAME,kBACJD,EAAaD,EAAME,gBAAiBC,IAAK,SAACC,EAAQC,GAC/C,OACIC,EAAAC,EAAAC,cAAA,UAAQJ,MAAOA,EAAOK,IAAKJ,EAAGK,SAAUV,EAAMU,WAAaN,GAA3D,IAAsEA,MAM9EE,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQpB,eACpBc,EAAAC,EAAAC,cAAA,UAAQK,SAAU,SAACC,GAAD,OAAWd,EAAMe,cAAcD,KAC5Cb,uCCwCFe,cApDW,SAAChB,GACvB,OACIM,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQnB,cAEhBa,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQK,YACxBX,EAAAC,EAAAC,cAAA,OAAKU,IAAM,kCAAoClB,EAAMmB,YAAaC,IAAKpB,EAAMqB,SAG7Ef,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQlB,WAChBY,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQhB,UAChBU,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAQjB,YAAzB,WACAW,EAAAC,EAAAC,cAAA,YAAOR,EAAMqB,QAErBf,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQhB,UAChBU,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAQjB,YAAzB,eACAW,EAAAC,EAAAC,cAAA,YAAOR,EAAMsB,aAErBhB,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQhB,UAChBU,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAQjB,YAAzB,mBACAW,EAAAC,EAAAC,cAAA,YAAOR,EAAMuB,eAErBjB,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQhB,UAChBU,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAQjB,YAAzB,eACAW,EAAAC,EAAAC,cAAA,YAAOR,EAAMwB,aAErBlB,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQhB,UAChBU,EAAAC,EAAAC,cAAA,YAAOR,EAAMyB,QAErBnB,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQhB,UAChBU,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAQjB,YAAzB,kBACAW,EAAAC,EAAAC,cAAA,YAAOR,EAAM0B,eAErBpB,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQhB,UAChBU,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAQjB,YAAzB,aACAW,EAAAC,EAAAC,cAAA,WAAMR,EAAM2B,WAEpBrB,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQf,UAChBS,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAQd,aAAc8B,QAAS,kBAAM5B,EAAM6B,aAAa7B,EAAM8B,MAA/E,kBAIAxB,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAQd,cACjBQ,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAASC,GAAI,CACLC,SAAWjC,EAAMkC,MAAMC,IAAM,aAAgBnC,EAAM8B,IACxDM,OAAK,GAFR,oBClClCjD,8LAGEkD,KAAKrC,MAAMsC,gBAAgBD,KAAKrC,MAAMuC,6CAGjC,IAAAC,EAAAH,KACDI,EAAe,KAkCnB,OAjC2B,MAAxBJ,KAAKrC,MAAM0C,YACTD,EAAgBJ,KAAKrC,MAAM0C,UAAWvC,IAAI,SAACC,EAAOC,GAC9C,GAAGmC,EAAKxC,MAAM2C,cAAgBvC,EAAM0B,GACjC,OACIxB,EAAAC,EAAAC,cAACoC,EAAD,CACAzB,YAAef,EAAMe,YACrBE,MAAOjB,EAAMiB,MACbC,WAAclB,EAAMkB,WACpBC,aAAgBnB,EAAMmB,aACtBC,WAAcpB,EAAMoB,WACpBC,MAASrB,EAAMqB,MACfC,aAAgBtB,EAAMsB,aACtBC,SAAYvB,EAAMuB,SAClBG,GAAI1B,EAAM0B,GACVD,aAAgB,SAACC,GAAD,OAAQU,EAAKxC,MAAM6C,oBAAoBf,SAQpEO,KAAKrC,MAAM8C,YACTL,EAAgBnC,EAAAC,EAAAC,cAAA,WACZF,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQrB,YACpBe,EAAAC,EAAAC,cAAA,QAAMoB,QAASS,KAAKrC,MAAM+C,iBAA1B,UAELzC,EAAAC,EAAAC,cAAA,UAAQwC,MAAM,OAAOC,OAAO,QACxB/B,IAAK,iCAAmCmB,KAAKrC,MAAM8C,cAM3DxC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACI5C,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQtB,eAChBgB,EAAAC,EAAAC,cAAC2C,EAAD,CAAQjD,gBAAmBmC,KAAKrC,MAAMD,OAAQgB,cAAe,SAACD,GAAD,OAAW0B,EAAKxC,MAAMoD,qBAAqBtC,IAAQJ,SAAU2B,KAAKrC,MAAMqD,kBAE7I/C,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQzB,WACpBmB,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQxB,iBAAkBkE,cAAY,QAClDhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOC,KAAMnB,KAAKrC,MAAMyD,YAAaC,WAAYrB,KAAKrC,MAAM+C,iBACvDN,GAGHJ,KAAKrC,MAAM0C,UAAUiB,OAASrD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAmBC,KAAMxB,KAAKrC,MAAM0C,UAAWoB,UAAW,kCAAmCC,SAAW1B,KAAKrC,MAAM+C,kBAAsBzC,EAAAC,EAAAC,cAACwD,EAAA,EAAD,MAEzK1D,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAQvB,UACpBiB,EAAAC,EAAAC,cAAA,QAAMoB,QAAS,kBAAMY,EAAKxC,MAAMsC,gBAAgBE,EAAKxC,MAAMuC,cAA3D,wBAvDJ0B,aAyFTC,sBAzBS,SAAAC,GACpB,MAAO,CACHzB,UAAWyB,EAAMC,UAAUjF,UAC3BkF,KAAOF,EAAMC,UAAUC,KACvBZ,YAAcU,EAAMC,UAAUE,YAC9B3B,YAAcwB,EAAMC,UAAUzB,YAC9BJ,WAAa4B,EAAMC,UAAU7B,WAC7BgC,WAAaJ,EAAMC,UAAUG,WAC7BC,UAAYL,EAAMC,UAAUI,UAC5BzE,OAASoE,EAAMC,UAAUK,aACzBpB,eAAiBc,EAAMC,UAAUf,eACjCP,UAAYqB,EAAMC,UAAUtB,YAIT,SAAA4B,GACvB,MAAO,CACHpC,gBAAiB,SAACqC,GAAD,OAAQD,EAASE,IAAsBD,KACxD5B,gBAAkB,SAACjB,GAAD,OAAQ4C,EAASE,IAAyB9C,KAC5D+C,WAAa,kBAAMH,EAASE,QAC5BxB,qBAAuB,SAACtC,GAAD,OAAW4D,EAASE,IAAqB9D,KAChE+B,oBAAsB,SAACf,GAAD,OAAQ4C,EAASE,IAAuB9C,OAIvDoC,CAA6C/E","file":"static/js/3.72abf5be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Movielist\":\"Movielist_Movielist__10F0C\",\"MovielistWrapper\":\"Movielist_MovielistWrapper__T1Fbw\",\"LoadMore\":\"Movielist_LoadMore__3pejS\",\"filterWrapper\":\"Movielist_filterWrapper__2pLaD\",\"closeModal\":\"Movielist_closeModal__3a3nK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterWrapper\":\"Filter_FilterWrapper__3WKqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContent\":\"MovieModalContent_ModalContent__-hMA6\",\"ModalInfo\":\"MovieModalContent_ModalInfo__3NUCB\",\"ModalTitle\":\"MovieModalContent_ModalTitle__V-7so\",\"infoLine\":\"MovieModalContent_infoLine__14o0j\",\"MoreInfo\":\"MovieModalContent_MoreInfo__IuZY7\",\"MoreInfoBars\":\"MovieModalContent_MoreInfoBars__3Wzaa\"};","import React from 'react';\r\nimport classes from './Filter.module.css';\r\n\r\nconst filter = (props) => {\r\n    let optionBox =  [];\r\n    if(props.selectedFilters != null){\r\n         optionBox = (props.selectedFilters).map( (value , i) => {\r\n            return (\r\n                <option value={value} key={i} selected={props.selected === value}  > {value}</option> \r\n            )\r\n        })\r\n    }\r\n    \r\n    return  (\r\n        <div className={classes.FilterWrapper}>\r\n            <select onChange={(event) => props.onfilterApply(event)}>\r\n                {optionBox}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default filter;","import React from 'react';\nimport classes from './MovieModalContent.module.css';\nimport  { NavLink , withRouter}  from 'react-router-dom';\n\nconst movieModalContent = (props) => {\n    return (\n        <div className={classes.ModalContent}>\n\n                <div className={classes.ModalImage}>\n                <img src={ \"https://image.tmdb.org/t/p/w400\" + props.poster_path} alt={props.title}/>\n                </div>\n\n                <div className={classes.ModalInfo}>\n                        <div className={classes.infoLine}>\n                                <span className={classes.ModalTitle}>Title: </span> \n                                <span>{props.title}</span>\n                        </div>\n                        <div className={classes.infoLine}>\n                                <span className={classes.ModalTitle}>Vote Count:</span> \n                                <span>{props.vote_count}</span>\n                        </div>\n                        <div className={classes.infoLine}>\n                                <span className={classes.ModalTitle}>Average Rating:</span> \n                                <span>{props.vote_average}</span>\n                        </div>\n                        <div className={classes.infoLine}>\n                                <span className={classes.ModalTitle}>Popularity:</span> \n                                <span>{props.popularity}</span>\n                        </div>\n                        <div className={classes.infoLine}>\n                                <span>{props.adult}</span>\n                        </div>\n                        <div className={classes.infoLine}>\n                                <span className={classes.ModalTitle}>Release Date: </span> \n                                <span>{props.release_date}</span>\n                        </div>\n                        <div className={classes.infoLine}>\n                                <span className={classes.ModalTitle}>Overview:</span> \n                                <div>{props.overview}</div>\n                        </div>\n                        <div className={classes.MoreInfo}> \n                                <span className={classes.MoreInfoBars} onClick={() => props.trailerClick(props.id)}>\n                                         Watch Trailer!\n                                </span>\n                                \n                                <span className={classes.MoreInfoBars}>\n                                        <NavLink to={{\n                                                pathname : props.match.url + \"/movie?id=\" +  props.id\n                                        }} exact > More Info</NavLink>\n                                </span>\n                        </div>\n                </div>\n        </div>\n    )\n}\n\nexport default withRouter(movieModalContent);","import React , {Component} from 'react';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport MovieDisplayCards from '../../components/DisplayCards/MovieDisplayCards/MovieDisplayCards';\r\nimport Spinner from '../../components/UIcomponents/Spinner/Spinner';\r\nimport classes from './Movielist.module.css';\r\nimport Modal from '../../components/UIcomponents/Modal/Modal';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport MoviesModalContent from '../../components/ModalContent/MovieModalContent';\r\n\r\n\r\n\r\nclass Movielist extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onInitMovielist(this.props.pageNumber);\r\n    } \r\n\r\n    render (){\r\n        let modalContent = null;\r\n        if(this.props.movielist != null){\r\n             modalContent = (this.props.movielist).map((value, i) => {\r\n                 if(this.props.activeMovie === value.id){\r\n                    return (\r\n                        <MoviesModalContent \r\n                        poster_path = {value.poster_path}\r\n                        title={value.title}\r\n                        vote_count = {value.vote_count}\r\n                        vote_average = {value.vote_average}\r\n                        popularity = {value.popularity}\r\n                        adult = {value.adult}\r\n                        release_date = {value.release_date}\r\n                        overview = {value.overview}\r\n                        id={value.id}\r\n                        trailerClick = {(id) => this.props.trailerClickHandler(id)}\r\n                        />\r\n                    )\r\n                 }\r\n                \r\n            })\r\n        }\r\n\r\n        if(this.props.trailerId){\r\n             modalContent = (<div>\r\n                 <div className={classes.closeModal}> \r\n                     <span onClick={this.props.onClickMovieBox}>Close</span>\r\n                </div>\r\n                <iframe width=\"100%\" height=\"400px\"\r\n                    src={\"https://www.youtube.com/embed/\" + this.props.trailerId}>\r\n                </iframe>\r\n             </div> )\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={classes.filterWrapper}>\r\n                        <Filter selectedFilters = {this.props.filter} onfilterApply={(event) => this.props.onFilterApplyHandler(event)} selected={this.props.selectedFilter}/>\r\n                </div>\r\n                <div className={classes.Movielist}>\r\n                    <div className={classes.MovielistWrapper} aria-hidden=\"true\">\r\n                        <Modal show={this.props.modalStatus} modalClose={this.props.onClickMovieBox}>\r\n                            {modalContent}\r\n                        </Modal>\r\n\r\n                        { this.props.movielist.length ? <MovieDisplayCards list={this.props.movielist} imagePath={\"https://image.tmdb.org/t/p/w300\"} moreInfo={ this.props.onClickMovieBox} /> : <Spinner />}\r\n\r\n                        <div className={classes.LoadMore}>\r\n                            <span onClick={() => this.props.onInitMovielist(this.props.pageNumber)}>Load More</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        movielist: state.movieList.Movielist,\r\n        page : state.movieList.page,\r\n        modalStatus : state.movieList.ModalStatus,\r\n        activeMovie : state.movieList.activeMovie,\r\n        pageNumber : state.movieList.pageNumber,\r\n        totalPages : state.movieList.totalPages,\r\n        scrolling : state.movieList.scrolling,\r\n        filter : state.movieList.ratingFilter,\r\n        selectedFilter : state.movieList.selectedFilter,\r\n        trailerId : state.movieList.trailerId\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitMovielist: (no) => dispatch(actions.initMovielist(no)),\r\n        onClickMovieBox : (id) => dispatch(actions.getMoreMovieInfo(id)),\r\n        onLoadMore : () => dispatch(actions.getMoreMovies()),\r\n        onFilterApplyHandler : (event) => dispatch(actions.filterMovies(event)),\r\n        trailerClickHandler : (id) => dispatch(actions.trailerClicked(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movielist);\r\n"],"sourceRoot":""}